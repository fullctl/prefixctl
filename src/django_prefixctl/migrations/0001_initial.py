# Generated by Django 3.2.9 on 2021-11-18 13:42

import django.db.models.deletion
import django.db.models.manager
import django_handleref.models
import fullctl.django.inet.validators
import fullctl.django.validators
from django.db import migrations, models

import django_prefixctl.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("django_fullctl", "0017_alter_organizationuser_options"),
    ]

    operations = [
        migrations.CreateModel(
            name="AlertGroup",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                ("name", models.CharField(help_text="Group name", max_length=255)),
                (
                    "instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alertgrp_set",
                        to="django_fullctl.instance",
                    ),
                ),
            ],
            options={
                "db_table": "prefixctl_alertgrp",
                "unique_together": {("instance", "name")},
            },
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="AlertLog",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                ("subject", models.CharField(max_length=255)),
                ("message", models.TextField()),
                (
                    "alertgrp",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alertlog_set",
                        to="django_prefixctl.alertgroup",
                    ),
                ),
            ],
            options={
                "db_table": "prefixctl_alertlog",
            },
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ASNSet",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="name of the asn set", max_length=255),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="description of the asn set",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asnset_set",
                        to="django_fullctl.instance",
                    ),
                ),
            ],
            options={
                "db_table": "prefixctl_asnset",
                "unique_together": {("instance", "name")},
            },
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="PrefixSet",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="name of the prefix set", max_length=255
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="description of the prefix set",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "irr_import",
                    models.BooleanField(
                        default=False, help_text="enable automatic import of prefixes"
                    ),
                ),
                (
                    "irr_sources",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="specify sources for prefixlist import (comma separated)",
                        max_length=255,
                        null=True,
                        validators=[
                            fullctl.django.validators.validate_alphanumeric_list
                        ],
                    ),
                ),
                (
                    "irr_as_set",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="import prefixes for AS-SET",
                        max_length=255,
                        null=True,
                        validators=[fullctl.django.validators.validate_alphanumeric],
                    ),
                ),
                (
                    "instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pfxset_set",
                        to="django_fullctl.instance",
                    ),
                ),
            ],
            options={
                "db_table": "prefixctl_pfxset",
                "unique_together": {("instance", "name")},
            },
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="TaskContainer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AlertTask",
            fields=[],
            options={
                "abstract": False,
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("django_fullctl.task",),
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="PrefixMonitorTask",
            fields=[],
            options={
                "abstract": False,
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=(django_prefixctl.models.MonitorTaskMixin, "django_fullctl.task"),
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="PrefixSetTask",
            fields=[
                (
                    "task_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="django_fullctl.task",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_set",
                        to="django_prefixctl.prefixset",
                    ),
                ),
            ],
            options={
                "db_table": "prefixctl_pfxtask",
            },
            bases=("django_fullctl.task",),
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="PrefixMonitor",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "asn_path",
                    models.CharField(
                        blank=True,
                        help_text="AS_PATH regex field",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "alert_specifics",
                    models.BooleanField(help_text="Alert on more specifics"),
                ),
                (
                    "alert_dampening",
                    models.BooleanField(help_text="Alert on dampening"),
                ),
                ("roa_validation", models.BooleanField(help_text="ROA validation")),
                (
                    "asnset_origin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pfxmon_origin_set",
                        to="django_prefixctl.asnset",
                    ),
                ),
                (
                    "asnset_upstream",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pfxmon_upstream_set",
                        to="django_prefixctl.asnset",
                    ),
                ),
                (
                    "instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pfxmon_set",
                        to="django_fullctl.instance",
                    ),
                ),
                (
                    "pfxset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pfxmon_set",
                        to="django_prefixctl.prefixset",
                    ),
                ),
            ],
            options={
                "db_table": "prefixctl_pfxmon",
            },
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ASNMonitor",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "new_prefix_detection",
                    models.BooleanField(help_text="New prefix detection"),
                ),
                (
                    "asnset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asnmon_set",
                        to="django_prefixctl.asnset",
                    ),
                ),
                (
                    "instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asnmon_set",
                        to="django_fullctl.instance",
                    ),
                ),
            ],
            options={
                "db_table": "prefixctl_asnmon",
            },
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="AlertLogRecipient",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                ("typ", models.CharField(choices=[("email", "Email")], max_length=255)),
                (
                    "recipient",
                    models.CharField(
                        help_text="Recipient address (e-mail address for example)",
                        max_length=255,
                    ),
                ),
                (
                    "alertlog",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alertlogrcp_set",
                        to="django_prefixctl.alertlog",
                    ),
                ),
            ],
            options={
                "db_table": "prefixctl_alertlogrcp",
            },
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Prefix",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "prefix",
                    models.CharField(
                        max_length=255,
                        validators=[fullctl.django.inet.validators.validate_prefix],
                    ),
                ),
                (
                    "mask_length_range",
                    models.CharField(
                        default="exact",
                        max_length=255,
                        validators=[
                            fullctl.django.inet.validators.validate_masklength_range
                        ],
                    ),
                ),
                (
                    "pfxset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pfx_set",
                        to="django_prefixctl.prefixset",
                    ),
                ),
            ],
            options={
                "db_table": "prefixctl_pfx",
                "unique_together": {("pfxset", "prefix")},
            },
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ASN",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                ("asn", models.PositiveIntegerField()),
                (
                    "asnset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asn_set",
                        to="django_prefixctl.asnset",
                    ),
                ),
            ],
            options={
                "db_table": "prefixctl_asn",
                "unique_together": {("asnset", "asn")},
            },
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="AlertRecipient",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                ("typ", models.CharField(choices=[("email", "Email")], max_length=255)),
                (
                    "recipient",
                    models.CharField(
                        help_text="Recipient address (e-mail address for example)",
                        max_length=255,
                    ),
                ),
                (
                    "alertgrp",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alertrcp_set",
                        to="django_prefixctl.alertgroup",
                    ),
                ),
            ],
            options={
                "db_table": "prefixctl_alertrcp",
                "unique_together": {("alertgrp", "typ", "recipient")},
            },
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
    ]

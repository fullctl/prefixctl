# Generated by Django 3.2.15 on 2023-02-20 16:06

from django.db import migrations


def forward(apps, schema_editor):
    """
    Up until now all sources were stored in the same
    json data keyed to their soruce name

    With migration 0004 we are moving to a separated approach
    where each source will get its own object instance,
    so we need to move the data accordingly
    """

    Data = apps.get_model("prefix_meta", "Data")

    objects = []

    for meta_data in Data.objects.all():
        _data = meta_data.data

        if not _data:
            continue

        for source_name, source_data in _data.items():
            objects.append(
                Data(
                    prefix=meta_data.prefix,
                    source_name=source_name,
                    data=source_data,
                    date=meta_data.date,
                ),
            )

    Data.objects.all().delete()

    for meta_data in objects:
        meta_data.save()


def backward(apps, schema_editor):
    """
    With migration 0004, we separated sources into their own objects.
    We are now moving back to the previous approach of storing all sources
    in a single json data field keyed to their source name.
    """

    Data = apps.get_model("prefix_meta", "Data")

    data_dict = {}

    for meta_data in Data.objects.all():
        if not meta_data.source_name:
            continue

        if meta_data.prefix not in data_dict:
            data_dict[meta_data.prefix] = {}

        if meta_data.source_name in data_dict[meta_data.prefix]:
            continue

        data_dict[meta_data.prefix][meta_data.source_name] = meta_data.data

    Data.objects.all().delete()

    for prefix, source_data in data_dict.items():
        Data.objects.create(prefix=prefix, data=source_data)


class Migration(migrations.Migration):
    dependencies = [
        ("prefix_meta", "0004_auto_20230220_1544"),
    ]

    operations = [
        migrations.RunPython(forward, backward),
    ]
